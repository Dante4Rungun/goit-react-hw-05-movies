{"version":3,"file":"static/js/76.1bb3f6ab.chunk.js","mappings":"yPACA,GAAgB,KAAO,mBAAmB,WAAa,yBAAyB,WAAa,yBAAyB,gBAAkB,+B,SC8BxI,EAzBa,WACT,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAC2BC,EAAAA,GAAAA,UAAcN,GADzC,OACUO,EADV,OAEIH,EAAQG,GAFZ,4CADY,uBAAC,WAAD,wBAKZC,EACH,GAAC,CAACR,KAGC,eAAIS,UAAWC,EAAAA,KAAf,SACKP,EAAKQ,KAAI,SAAAC,GAAK,OACX,gBAAIH,UAAWC,EAAAA,WAAf,WACI,gBAAKD,UAAWC,EAAAA,UAAkBG,IAA4B,OAAvBD,EAAME,aAAwB,sGAA9B,0CAAwKF,EAAME,cAAgBC,IAAG,UAAKH,EAAMI,KAAX,WAA0BC,MAAM,MAAMC,OAAO,SACrR,cAAGT,UAAWC,EAAAA,WAAd,SAAkCE,EAAMI,QACxC,eAAGP,UAAWC,EAAAA,gBAAd,wBAAkDE,EAAMO,eAJjD,KAS1B,C,0EC3BDC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAU,mCAAG,WAAOC,EAAMC,EAAYC,GAAzB,uFACDL,IAAAA,IAAA,UAAaG,EAAb,YAAqBC,EAArB,oBAA4CH,EAA5C,iBAA4DI,IAD3D,UAClBC,EADkB,OAEX,UAATH,EAFoB,yCAGfG,EAASC,MAHM,gCAMfD,EAASC,KAAKC,SANC,2CAAH,0DAUVpB,EAAS,mCAAG,WAAOR,GAAP,uFACAoB,IAAAA,IAAA,gBAAmBpB,EAAnB,4BAAyCqB,IADzC,cACjBK,EADiB,yBAEhBA,EAASC,KAAKxB,MAFE,2CAAH,sDAKT0B,EAAY,mCAAG,WAAO7B,GAAP,uFACHoB,IAAAA,IAAA,gBAAmBpB,EAAnB,4EADG,cACpB0B,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZE,EAAW,mCAAG,WAAOC,GAAP,uFACFX,IAAAA,IAAA,qFAAwFW,EAAxF,gCADE,cACnBL,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKlBtB,EAAM,CACVgB,WAAAA,EACAd,UAAAA,EACAqB,aAAAA,EACAC,YAAAA,GAEF,M","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"cast__item\":\"Cast_cast__item__UfPEI\",\"cast__name\":\"Cast_cast__name__i+AX1\",\"cast__character\":\"Cast_cast__character__Rd95n\"};","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"services/api\";\nimport styled from \"./Cast.module.css\"\n\nconst Cast = () => {\n    const { id } = useParams()\n    const [cast, setCast] = useState([])\n\n    useEffect(() => {\n        async function fetchCast() {\n            const loadCast = await api.fetchCast(id)\n            setCast(loadCast)\n        }\n        fetchCast()\n    },[id])\n\n    return (\n        <ul className={styled.cast}>\n            {cast.map(actor => (\n                <li className={styled.cast__item}>\n                    <img className={styled.cast__img} src={actor.profile_path === null ? 'https://us.123rf.com/450wm/glebstock/glebstock1507/glebstock150700212/42190907-silhouette.jpg?ver=6' :`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} alt={`${actor.name} poster`} width=\"400\" height=\"600\"/>\n                    <p className={styled.cast__name}>{actor.name}</p>\n                    <p className={styled.cast__character}>Character: {actor.character}</p>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nexport default Cast\n//https://us.123rf.com/450wm/glebstock/glebstock1507/glebstock150700212/42190907-silhouette.jpg?ver=6","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\"\nconst API_KEY = 'de9b46869023b8f92c21ca747a043c5f'\n\nexport const fetchFilms = async (type, searchQuery,page) => {\n  const response = await axios.get(`${type}/${searchQuery}?api_key=${API_KEY}&page=${page}`)\n  if (type === 'movie') {\n    return response.data\n  }\n  else {\n    return response.data.results\n  }   \n}\n\nexport const fetchCast = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`)\n  return response.data.cast\n}\n\nexport const fetchReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=de9b46869023b8f92c21ca747a043c5f&language=en-US&page=1`)\n  return response.data.results\n}\n\nexport const fetchSearch = async (query) => {\n  const response = await axios.get(`search/movie?api_key=de9b46869023b8f92c21ca747a043c5f&language=en-US&query=${query}&page=1&include_adult=false`)\n  return response.data.results\n}\n\nconst api = {\n  fetchFilms,\n  fetchCast,\n  fetchReviews,\n  fetchSearch\n}\nexport default api\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=de9b46869023b8f92c21ca747a043c5f&language=en-US&page=1\n//Cast\n//https://api.themoviedb.org/3/movie/642885/credits?api_key=de9b46869023b8f92c21ca747a043c5f\n//console.log(fetchFilms('trending/movie','week',2))\n//search need movie to show details\n//https://api.themoviedb.org/3/movie/718930?api_key=de9b46869023b8f92c21ca747a043c5f&language=en-US\n//https://api.themoviedb.org/3/movie/828558?api_key=de9b46869023b8f92c21ca747a043c5f&language=en-US\n//trends\n//https://api.themoviedb.org/3/trending/movie/week?api_key=de9b46869023b8f92c21ca747a043c5f\n//search by query\n//https://api.themoviedb.org/3/search/movie?api_key=de9b46869023b8f92c21ca747a043c5f&language=en-US&query=batman&page=1&include_adult=false\n"],"names":["id","useParams","useState","cast","setCast","useEffect","api","loadCast","fetchCast","className","styled","map","actor","src","profile_path","alt","name","width","height","character","axios","API_KEY","fetchFilms","type","searchQuery","page","response","data","results","fetchReviews","fetchSearch","query"],"sourceRoot":""}